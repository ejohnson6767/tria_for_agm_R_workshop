df1$entry_holes
library(tidyverse)
# 1. read in the alberta disk data ----------------------------------------
# HINT: use the read.csv function, check your working directory
# SOLUTION
getwd() # check working directory
# setwd("C:/Users/keked/OneDrive - University of Victoria/PhD/TRIA-FoR/RWorkshop")
setwd("C:/Users/panch/Documents/GitHub/AGM_workshop") # if the working directory does not contain the dataset, then set working directory
# a MUCH better solution is to make an R project and use the here package, but this is outside the scope of this workshop
df0 <- read.csv("ab_disk_data.csv") # load the data
# SOLUTION
getwd() # check working directory
df0 <- read.csv("ab_disk_data.csv") # load the data
getwd()
df0 <- read.csv("ab_disk_data.csv") # load the data
df0 <- read.csv("ab_disk_data.csv") # load the data
df0 = read_csv("~/GitHub/tria_for_agm_R_worshop/ab_disk_data.csv")
df0
# SOLUTION
df1 <- df0 %>% filter(entry_holes > 0)
df1$entry_holes
is.na(df1$entry_holes)
unique(is.na(df1$entry_holes))
df1[which(is.na(df1$entry_holes)),]
df1[which(is.na(df1$entry_holes)),]
# SOLUTIONS
df2 <- df1 %>% filter(larvae > 0 | pupae>0 | dead_pupae > 0)
#  or...
df2 <- df1 %>% mutate(brood = larvae+pupae+dead_pupae) %>%
filter(brood > 0)
df2[which(larvae > 0),]
df2[which(df2larvae > 0),]
df2[which(df2$larvae > 0),]
df2[which(df2$larvae > 0) & which(df2$pupae > 0),]
df2[which(df2$larvae > 0) | which(df2$pupae > 0),]
df2[which(df2$larvae > 0 | df2$pupae > 0),]
length(df1)
nrow(df1)
df2[which(df2$larvae > 0 | df2$pupae > 0 | df2$dead_pupae),]
df3$live_brood
# SOLUTIONS
df2 <- df1 %>% filter(larvae > 0 | pupae>0 | dead_pupae > 0)
# SOLUTION
df3 <- df2 %>% drop_na()
# base r solution
df3 <- na.omit(df2)
# SOLUTION
df4 <- df3 %>% mutate(fitness = 0.5*live_brood/entry_holes)
df3$fitness = 0.5 * df3$live_brood/df3$entry_holes
df#$fitness
df$fitness
df3$fitness
head(df3)
glimpse(df3)
plot(df4$dhb, df4$fitness)
head(df4)
plot(df4$dbh, df4$fitness)
plot(x = df4$dbh, y = df4$fitness)
lm(df4, dbh ~ fitness)
lm(df4$dbh ~ df4$fitness)
mod = lm(df4$dbh ~ df4$fitness)
plot(x = df4$dbh, y = df4$fitness)
plot(x = df4$dbh, y = df4$fitness)
abline(mod, col = "red")
mod = lm(df4$fitness ~ df4$dbh)
plot(x = df4$dbh, y = df4$fitness)
abline(mod, col = "red")
?plot
xlab("try")
plot(x = df4$dbh, y = df4$fitness, xlab = "DBH")
plot(x = df4$dbh, y = df4$fitness, xlab = "DBH", ylab = "Fitness")
?inner_join
df5 <- df4 %>% inner_join(temp, by = c("site"), multiple = "first")
# SOLUTION
temp <- read.csv("ab_temp_data.csv")
df5 <- df4 %>% inner_join(temp, by = c("site"), multiple = "first")
# SOLUTION
temp <- read.csv("ab_temp_data.csv")
# SOLUTION
dir()
setwd("C:/Users/panch/Documents/GitHub/tria_for_agm_worshop")
# setwd("C:/Users/keked/OneDrive - University of Victoria/PhD/TRIA-FoR/RWorkshop")
setwd("C:/Users/panch/Documents/GitHub/tria_for_agm_R_worshop") # if the working directory does not contain the dataset, then set working directory
temp <- read.csv("ab_temp_data.csv")
df5 <- df4 %>% inner_join(temp, by = c("site"), multiple = "first")
temp <- read.csv("ab_temp_data.csv")
df5 <- left_join(df4, temp,
by = c("site"),
multiple = "first")
# First, use this code to download the polygon for Alberta
# uncomment the following two lines to download the packages
# install.packages("rnaturalearth")
# install.packages("rnaturalearthdata")
library(rnaturalearth)
canada_states <- ne_states(country = "Canada", returnclass = "sf")
alberta <- subset(canada_states, name == "Alberta")
# add onto this code to plot the locations of the disk data
ggplot(data = alberta) +
geom_sf() +
ggtitle("Disk data sampling locations") # add here
# First, use this code to download the polygon for alberta
# uncomment the following two lines to download the packages
# install.packages("rnaturalearth")
# install.packages("rnaturalearthdata")
library(rnaturalearth)
canada_states <- ne_states(country = "Canada", returnclass = "sf")
alberta <- subset(canada_states, name == "Alberta")
# add onto this code to plot the locations of the disk data
ggplot(data = alberta) +
geom_sf() +
ggtitle("Disk data sampling locations") # add here
# SOLUTION
ggplot(data = alberta) +
geom_sf() +
ggtitle("Disk data sampling locations") +
geom_point(data = df4, aes(x = longitude, y = latitude), color = 'red', size = 3) +
theme_minimal()
temp <- read.csv("ab_temp_data.csv")
df5 <- left_join(df4, temp,
by = c("site"),
multiple = "first")
head(alberta)
head(df4)
ggplot(data = alberta) +
geom_sf() +
ggtitle("Disk data sampling locations") +
geom_point(data = df4, aes(x = longitude, y = latitude, col = dbh), color = 'red', size = 3) +
theme_minimal()
